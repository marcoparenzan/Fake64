#!csharp

using System.IO;

var output = new StreamWriter("Chips.chargen.cs");
output.WriteLine("namespace Fake64;");
output.WriteLine("internal static partial class Chips {");
var chargen_base = 0xD000;
output.WriteLine($"\tinternal const ushort {nameof(chargen_base)} = 0x{chargen_base:X};");
output.WriteLine("public static byte[] chargen = new byte[] { ");

var bytes = File.ReadAllBytes("chargen");
for(var i = 0; i<bytes.Length; i += 16)
{
    output.Write($"\t/* 0x{chargen_base+i:X4} */ ");
    for(var j = 0; j <16; j++)
    {
        output.Write($"0x{bytes[i+j]:X2}, ");
    }
    output.WriteLine();
}

output.WriteLine("};");
output.WriteLine("}");

output.Close();

#!csharp

using System.IO;

var output = new StreamWriter("Chips.kernal.cs");
output.WriteLine("namespace Fake64;");
output.WriteLine("internal static partial class Chips {");
var kernal_base = 0xE000;
output.WriteLine($"\tinternal const ushort {nameof(kernal_base)} = ox{kernal_base:X};");
output.WriteLine("public static byte[] kernal = new byte[] { ");

var bytes = File.ReadAllBytes("kernal");
for(var i = 0; i<bytes.Length; i += 16)
{
    output.Write($"\t/* 0x{kernal_base+i:X4} */ ");
    for(var j = 0; j <16; j++)
    {
        output.Write($"0x{bytes[i+j]:X2}, ");
    }
    output.WriteLine();
}

output.WriteLine("};");
output.WriteLine("}");

output.Close();
